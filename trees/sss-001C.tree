\title{Guarded Recursion and Linearity}
\author{stevenschaefer}
\taxon{daily}
\date{2025-01-29}

\import{grammar-macros}

\p{
  In a discussion with Eric, we may have stumbled upon a neat interaction of guarded recursion and linearity.
}

\p{
  Could it be the case that guarded recursion in a linear setting would let you recover inductive reasoning? For instance, if I were to build a term of a guarded type in a finitary context, I could not do truly coinductive things. I will necessarily consume all of the input eventually or something like this.
}

\p{
  Regular languages can be [characterized as finite coalgebras](sss-001J), which has a very similar flavor to this interaction between guardedness and linearity. Deterministic automata arise here coalgebraically, and the coalgebras that happen to be finite are precisely those that are regular (which can already be described inductively). It is unclear if there are confounding factors that make this work out for regular languages, and not more general instances of finitely coinductive things.
}
