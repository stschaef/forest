[{"DOI": "10.1145/3341301.3359651", "ISBN": "978-1-4503-6873-5", "URL": "https://dl.acm.org/doi/10.1145/3341301.3359651", "abstract": "Designing and implementing distributed systems correctly is a very challenging task. Recently, formal verification has been successfully used to prove the correctness of distributed systems. At the heart of formal verification lies a computerchecked proof with an inductive invariant. Finding this inductive invariant, however, is the most difficult part of the proof. Alas, current proof techniques require inductive invariants to be found manually\u2014and painstakingly\u2014by the developer. In this paper, we present a new approach, Incremental Inference of Inductive Invariants (I4), to automatically generate inductive invariants for distributed protocols. The essence of our idea is simple: the inductive invariant of a finite instance of the protocol can be used to infer a general inductive invariant for the infinite distributed protocol. In I4, we create a finite instance of the protocol; use a model checking tool to automatically derive the inductive invariant for this finite instance; and generalize this invariant to an inductive invariant for the infinite protocol. Our experiments show that I4 can prove the correctness of several distributed protocols like Chord, 2PC and Transaction Chains with little to no human effort.", "accessed": {"date-parts": [[2023, 1, 10]]}, "author": [{"family": "Ma", "given": "Haojun"}, {"family": "Goel", "given": "Aman"}, {"family": "Jeannin", "given": "Jean-Baptiste"}, {"family": "Kapritsos", "given": "Manos"}, {"family": "Kasikci", "given": "Baris"}, {"family": "Sakallah", "given": "Karem A."}], "container-title": "Proceedings of the 27th ACM Symposium on Operating Systems Principles", "event": "SOSP \u201919: ACM SIGOPS 27th Symposium on Operating Systems Principles", "id": "maI4IncrementalInference2019", "issued": {"date-parts": [[2019, 10, 27]]}, "language": "en-US", "page": "370-384", "publisher": "ACM", "publisher-place": "Huntsville Ontario Canada", "title": "I4: Incremental inference of inductive invariants for verification of distributed protocols", "title-short": "I4", "type": "paper-conference", "original_bibtex": "@inproceedings{maI4IncrementalInference2019,\n title = {I4: Incremental Inference of Inductive Invariants for Verification of Distributed Protocols},\n author = {Ma, Haojun and Goel, Aman and Jeannin, Jean-Baptiste and Kapritsos, Manos and Kasikci, Baris and Sakallah, Karem A.},\n date = {2019-10-27},\n isbn = {978-1-4503-6873-5},\n doi = {10.1145/3341301.3359651},\n url = {https://dl.acm.org/doi/10.1145/3341301.3359651},\n urldate = {2023-01-10},\n booktitle = {Proceedings of the 27th {{ACM Symposium}} on {{Operating Systems Principles}}},\n pages = {370--384},\n publisher = {ACM},\n file = {/Users/stevenschaefer/Zotero/storage/NRPC5NEQ/Ma et al. - 2019 - I4 incremental inference of inductive invariants .pdf},\n langid = {english},\n eventtitle = {{{SOSP}} '19: {{ACM SIGOPS}} 27th {{Symposium}} on {{Operating Systems Principles}}},\n abstract = {Designing and implementing distributed systems correctly is a very challenging task. Recently, formal verification has been successfully used to prove the correctness of distributed systems. At the heart of formal verification lies a computerchecked proof with an inductive invariant. Finding this inductive invariant, however, is the most difficult part of the proof. Alas, current proof techniques require inductive invariants to be found manually\u2014and painstakingly\u2014by the developer. In this paper, we present a new approach, Incremental Inference of Inductive Invariants (I4), to automatically generate inductive invariants for distributed protocols. The essence of our idea is simple: the inductive invariant of a finite instance of the protocol can be used to infer a general inductive invariant for the infinite distributed protocol. In I4, we create a finite instance of the protocol; use a model checking tool to automatically derive the inductive invariant for this finite instance; and generalize this invariant to an inductive invariant for the infinite protocol. Our experiments show that I4 can prove the correctness of several distributed protocols like Chord, 2PC and Transaction Chains with little to no human effort.},\n location = {Huntsville Ontario Canada},\n shorttitle = {I4}\n}\n"}]