% ["references"]
\title{Ivy: A Multi-modal Verification Tool for Distributed Algorithms}
\date{2020}
\author/literal{Kenneth L. McMillan}\author/literal{Oded Padon}
\taxon{Reference}
\tag{distributedsystems}
\tag{inductiveinvariants}
\meta{doi}{10.1007/978-3-030-53291-8_12}
\meta{external}{http://link.springer.com/10.1007/978-3-030-53291-8_12}

\meta{bibtex}{\startverb
@incollection{mcmillanIvyMultimodalVerification2020,
 title = {Ivy: {{A Multi-modal Verification Tool}} for {{Distributed Algorithms}}},
 author = {McMillan, Kenneth L. and Padon, Oded},
 date = {2020},
 isbn = {978-3-030-53290-1 978-3-030-53291-8},
 doi = {10.1007/978-3-030-53291-8_12},
 url = {http://link.springer.com/10.1007/978-3-030-53291-8_12},
 urldate = {2023-02-07},
 booktitle = {Computer {{Aided Verification}}},
 editor = {Lahiri, Shuvendu K. and Wang, Chao},
 volume = {12225},
 pages = {190--202},
 publisher = {Springer International Publishing},
 file = {/Users/stevenschaefer/Zotero/storage/EGIFBFVI/McMillan and Padon - 2020 - Ivy A Multi-modal Verification Tool for Distribut.pdf},
 langid = {english},
 abstract = {Ivy is a multi-modal verification tool for correct design and implementation of distributed protocols and algorithms, supporting modular specification, implementation and proof. Ivy supports proving safety and liveness properties of parameterized and infinite-state systems via three modes: deductive verification using an SMT solver, abstraction and model checking, and manual proofs using natural deduction. It supports light-weight formal methods via compositional specification-based testing and bounded model checking. Ivy can extract executable distributed programs by translation to efficient C++ code. It is designed to support decidable automated reasoning, to improve proof stability and to provide transparency in the case of proof failures. For this purpose, it presents concrete finite counterexamples, automatically audits proofs for decidability of verification conditions, and provides modular hiding of theories.},
 location = {Cham},
 shorttitle = {Ivy}
}
\stopverb}
