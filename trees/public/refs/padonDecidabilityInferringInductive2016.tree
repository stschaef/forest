% ["references"]
\title{Decidability of inferring inductive invariants}
\date{2016}
\author/literal{Oded Padon}\author/literal{Neil Immerman}\author/literal{Sharon Shoham}\author/literal{Aleksandr Karbyshev}\author/literal{Mooly Sagiv}
\taxon{Reference}
\tag{distributedsystems}
\tag{inductiveinvariants}
\meta{doi}{10.1145/2837614.2837640}
\meta{external}{https://doi.org/10.1145/2837614.2837640}

\meta{bibtex}{\startverb
@inproceedings{padonDecidabilityInferringInductive2016,
 title = {Decidability of inferring inductive invariants},
 author = {Padon, Oded and Immerman, Neil and Shoham, Sharon and Karbyshev, Aleksandr and Sagiv, Mooly},
 year = {2016},
 isbn = {9781450335492},
 doi = {10.1145/2837614.2837640},
 url = {https://doi.org/10.1145/2837614.2837640},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 pages = {217â€“231},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 location = {St. Petersburg, FL, USA},
 keywords = {well-quasi-order, verification, invariant inference, effectively propositional logic},
 numpages = {15},
 abstract = {Induction is a successful approach for verification of hardware and software systems. A common practice is to model a system using logical formulas, and then use a decision procedure to verify that some logical formula is an inductive safety invariant for the system. A key ingredient in this approach is coming up with the inductive invariant, which is known as invariant inference. This is a major difficulty, and it is often left for humans or addressed by sound but incomplete abstract interpretation. This paper is motivated by the problem of inductive invariants in shape analysis and in distributed protocols. This paper approaches the general problem of inferring first-order inductive invariants by restricting the language L of candidate invariants. Notice that the problem of invariant inference in a restricted language L differs from the safety problem, since a system may be safe and still not have any inductive invariant in L that proves safety. Clearly, if L is finite (and if testing an inductive invariant is decidable), then inferring invariants in L is decidable. This paper presents some interesting cases when inferring inductive invariants in L is decidable even when L is an infinite language of universal formulas. Decidability is obtained by restricting L and defining a suitable well-quasi-order on the state space. We also present some undecidability results that show that our restrictions are necessary. We further present a framework for systematically constructing infinite languages while keeping the invariant inference problem decidable. We illustrate our approach by showing the decidability of inferring invariants for programs manipulating linked-lists, and for distributed protocols.}
}
\stopverb}
