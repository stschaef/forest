[{"DOI": "10.1145/3385412.3385992", "ISBN": "9781450376136", "URL": "https://doi.org/10.1145/3385412.3385992", "abstract": "In this paper, we present an efficient, functional, and formally verified parsing algorithm for LL(1) context-free expressions based on the concept of derivatives of formal languages. Parsing with derivatives is an elegant parsing technique, which, in the general case, suffers from cubic worst-case time complexity and slow performance in practice. We specialise the parsing with derivatives algorithm to LL(1) context-free expressions, where alternatives can be chosen given a single token of lookahead. We formalise the notion of LL(1) expressions and show how to efficiently check the LL(1) property. Next, we present a novel linear-time parsing with derivatives algorithm for LL(1) expressions operating on a zipper-inspired data structure. We prove the algorithm correct in Coq and present an implementation as a part of Scallion, a parser combinators framework in Scala with enumeration and pretty printing capabilities.", "author": [{"family": "Edelmann", "given": "Romain"}, {"family": "Hamza", "given": "Jad"}, {"family": "Kun\u010dak", "given": "Viktor"}], "collection-title": "PLDI 2020", "container-title": "Proceedings of the 41st ACM SIGPLAN conference on programming language design and implementation", "id": "EdelmannZippy2020", "issued": {"date-parts": [[2020]]}, "keyword": "Zipper, Parsing, LL(1), Formal proof, Derivatives", "page": "1036-1051", "publisher": "Association for Computing Machinery", "publisher-place": "New York, NY, USA", "title": "Zippy LL(1) parsing with derivatives", "type": "paper-conference", "original_bibtex": "@inproceedings{EdelmannZippy2020,\n title = {Zippy LL(1) parsing with derivatives},\n author = {Edelmann, Romain and Hamza, Jad and Kun\\v{c}ak, Viktor},\n year = {2020},\n isbn = {9781450376136},\n doi = {10.1145/3385412.3385992},\n url = {https://doi.org/10.1145/3385412.3385992},\n booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},\n series = {PLDI 2020},\n pages = {1036\u20131051},\n publisher = {Association for Computing Machinery},\n address = {New York, NY, USA},\n location = {London, UK},\n keywords = {Zipper, Parsing, LL(1), Formal proof, Derivatives},\n numpages = {16},\n abstract = {In this paper, we present an efficient, functional, and formally verified parsing algorithm for LL(1) context-free expressions based on the concept of derivatives of formal languages. Parsing with derivatives is an elegant parsing technique, which, in the general case, suffers from cubic worst-case time complexity and slow performance in practice. We specialise the parsing with derivatives algorithm to LL(1) context-free expressions, where alternatives can be chosen given a single token of lookahead. We formalise the notion of LL(1) expressions and show how to efficiently check the LL(1) property. Next, we present a novel linear-time parsing with derivatives algorithm for LL(1) expressions operating on a zipper-inspired data structure. We prove the algorithm correct in Coq and present an implementation as a part of Scallion, a parser combinators framework in Scala with enumeration and pretty printing capabilities.}\n}\n"}]