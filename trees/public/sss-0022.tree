\title{What Connectives Perserve Finiteness?}
\date{2025-02-12T19:47:35Z}
\author{stevenschaefer}

\tag{deplambek}

\import{grammar-macros}

\def\card[x]{#{\vrt{\x}}}

\p{
  In order to bridge [the gap between finite unambiguity and unambiguity](sss-001W), we can try to restrict to grammars that have finitely many parse trees. We'd expect this to address the concern semantically, as that fixes the problem when the parses are interpreted in \Set.
}

\transclude{sss-001X}

\p{
  We can define [when a grammar is finite](sss-0021), and then try to prove that finiteness is preserved on some sane operations on grammars. For instance, #{\And}, #{\Or} , and #{\to} each preserve finiteness. I haven't proven this myself (which would be a useful exercise), but the following is substantiated in any topos with a natural numbers object \citek{johnstone-2002}.
}

\transclude{sss-0023}

\p{
  The case of #{\otimes} is more problematic. Semantically, for all #{w : \String} we may bound the size of the set of parse trees
  ##{ \card{(A \otimes B) w} \leq \Sigma\Sub{\append{w\Sub{1}}{w\Sub{2}} = w} \card{A w\Sub{1}} \card{B w\Sub{2}}  }
}

\p{
Precisely knowing this bound isn't too important, but certainly it exists. We could capture this behavior by just adding an axiom that if #{A} and #{B} are each finite, then #{A \otimes B} is finite. Although, I'd rather not add an axiom.
}

\p{
We could directly try to prove that #{\otimes} preserves finiteness. The statment would follow from showing that #{\otimes} preserves monomorphisms. That is, if #{f : A \into C} and #{g : B \into D}, it suffices to show that #{f \otimes g : A \otimes B \to C \otimes D} is a monomorphism. This would imply finiteness, because you may then apply this for #{C} and #{D} as #{\mathsf{Fin}}. However, you would also need to show that #{\mathsf{Fin} \otimes \mathsf{Fin}} is finite, which isn't immediately clear.
}
